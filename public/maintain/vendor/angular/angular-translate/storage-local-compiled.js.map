{"version":3,"sources":["storage-local.js"],"names":[],"mappings":"AAAA,QAAQ,MAAR,CAAe,wBAAf;;;;;;;;;;;;AAAA,CAYC,OAZD,CAYS,wBAZT,EAYmC,CAAC,SAAD,EAAY,yBAAZ,EAAuC,UAAU,OAAV,EAAmB,uBAAnB,EAA4C;;;AAGpH,MAAI,sBAAuB,YAAU;AACnC,QAAI,OAAJ;AACA,WAAO;;;;;;;;;;;;AAYL,WAAK,UAAU,IAAV,EAAgB;AACnB,YAAG,CAAC,OAAJ,EAAa;AACX,oBAAU,QAAQ,YAAR,CAAqB,OAArB,CAA6B,IAA7B,CAAV;AACD;;AAED,eAAO,OAAP;AACD,OAlBI;;;;;;;;;;;;AA8BL,WAAK,UAAU,IAAV,EAAgB,KAAhB,EAAuB;AAC1B,kBAAQ,KAAR;AACA,gBAAQ,YAAR,CAAqB,OAArB,CAA6B,IAA7B,EAAmC,KAAnC;AACD;AAjCI,KAAP;AAmCD,GArC0B,EAA3B;;AAuCA,MAAI,yBAAyB,kBAAkB,OAAlB,IAA6B,QAAQ,YAAR,KAAyB,IAAnF;AACA,MAAI,sBAAJ,EAA4B;AAC1B,QAAI,UAAU,oCAAd;AACA,QAAI;AACF,cAAQ,YAAR,CAAqB,OAArB,CAA6B,OAA7B,EAAsC,KAAtC;AACA,cAAQ,YAAR,CAAqB,UAArB,CAAgC,OAAhC;AACD,KAHD,CAGE,OAAO,CAAP,EAAS;AACT,+BAAyB,KAAzB;AACD;AACF;AACD,MAAI,yBAAyB,yBAAyB,mBAAzB,GAA+C,uBAA5E;AACA,SAAO,sBAAP;AACD,CAtDkC,CAZnC","file":"storage-local-compiled.js","sourcesContent":["angular.module('pascalprecht.translate')\n\n/**\n * @ngdoc object\n * @name pascalprecht.translate.$translateLocalStorage\n * @requires $window\n *\n * @description\n * Abstraction layer for localStorage. This service is used when telling angular-translate\n * to use localStorage as storage.\n *\n */\n.factory('$translateLocalStorage', ['$window', '$translateCookieStorage', function ($window, $translateCookieStorage) {\n\n  // Setup adapter\n  var localStorageAdapter = (function(){\n    var langKey;\n    return {\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translateLocalStorage#get\n       * @methodOf pascalprecht.translate.$translateLocalStorage\n       *\n       * @description\n       * Returns an item from localStorage by given name.\n       *\n       * @param {string} name Item name\n       * @return {string} Value of item name\n       */\n      get: function (name) {\n        if(!langKey) {\n          langKey = $window.localStorage.getItem(name);\n        }\n\n        return langKey;\n      },\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translateLocalStorage#set\n       * @methodOf pascalprecht.translate.$translateLocalStorage\n       *\n       * @description\n       * Sets an item in localStorage by given name.\n       *\n       * @param {string} name Item name\n       * @param {string} value Item value\n       */\n      set: function (name, value) {\n        langKey=value;\n        $window.localStorage.setItem(name, value);\n      }\n    };\n  }());\n\n  var hasLocalStorageSupport = 'localStorage' in $window && $window.localStorage !== null;\n  if (hasLocalStorageSupport) {\n    var testKey = 'pascalprecht.translate.storageTest';\n    try {\n      $window.localStorage.setItem(testKey, 'foo');\n      $window.localStorage.removeItem(testKey);\n    } catch (e){\n      hasLocalStorageSupport = false;\n    }\n  }\n  var $translateLocalStorage = hasLocalStorageSupport ? localStorageAdapter : $translateCookieStorage;\n  return $translateLocalStorage;\n}]);\n"]}