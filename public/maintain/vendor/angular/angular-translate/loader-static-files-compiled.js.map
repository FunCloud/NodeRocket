{"version":3,"sources":["loader-static-files.js"],"names":[],"mappings":"AAAA,QAAQ,MAAR,CAAe,wBAAf;;;;;;;;;;;;;;AAAA,CAcC,OAdD,CAcS,6BAdT,EAcwC,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAU,EAAV,EAAc,KAAd,EAAqB;;AAE3E,SAAO,UAAU,OAAV,EAAmB;;AAExB,QAAI,CAAC,OAAD,IAAa,CAAC,QAAQ,QAAR,CAAiB,QAAQ,MAAzB,CAAD,IAAqC,CAAC,QAAQ,QAAR,CAAiB,QAAQ,MAAzB,CAAvD,EAA0F;AACxF,YAAM,IAAI,KAAJ,CAAU,6DAAV,CAAN;AACD;;AAED,QAAI,WAAW,GAAG,KAAH,EAAf;;AAEA,UAAM;AACJ,WAAK,CACH,QAAQ,MADL,EAEH,QAAQ,GAFL,EAGH,QAAQ,MAHL,EAIH,IAJG,CAIE,EAJF,CADD;AAMJ,cAAQ,KANJ;AAOJ,cAAQ;AAPJ,KAAN,EAQG,OARH,CAQW,UAAU,IAAV,EAAgB;AACzB,eAAS,OAAT,CAAiB,IAAjB;AACD,KAVD,EAUG,KAVH,CAUS,UAAU,IAAV,EAAgB;AACvB,eAAS,MAAT,CAAgB,QAAQ,GAAxB;AACD,KAZD;;AAcA,WAAO,SAAS,OAAhB;AACD,GAvBD;AAwBD,CA1BuC,CAdxC","file":"loader-static-files-compiled.js","sourcesContent":["angular.module('pascalprecht.translate')\n/**\n * @ngdoc object\n * @name pascalprecht.translate.$translateStaticFilesLoader\n * @requires $q\n * @requires $http\n *\n * @description\n * Creates a loading function for a typical static file url pattern:\n * \"lang-en_US.json\", \"lang-de_DE.json\", etc. Using this builder,\n * the response of these urls must be an object of key-value pairs.\n *\n * @param {object} options Options object, which gets prefix, suffix and key.\n */\n.factory('$translateStaticFilesLoader', ['$q', '$http', function ($q, $http) {\n\n  return function (options) {\n\n    if (!options || (!angular.isString(options.prefix) || !angular.isString(options.suffix))) {\n      throw new Error('Couldn\\'t load static files, no prefix or suffix specified!');\n    }\n\n    var deferred = $q.defer();\n\n    $http({\n      url: [\n        options.prefix,\n        options.key,\n        options.suffix\n      ].join(''),\n      method: 'GET',\n      params: ''\n    }).success(function (data) {\n      deferred.resolve(data);\n    }).error(function (data) {\n      deferred.reject(options.key);\n    });\n\n    return deferred.promise;\n  };\n}]);\n"]}