{"version":3,"sources":["funnel.src.js"],"names":[],"mappings":";;;;;;;;;;AAUC,WAAU,UAAV,EAAsB;;AAEvB;;;;AAGA,KAAI,iBAAiB,WAAW,UAAX,EAArB;AAAA,KACC,qBAAqB,eAAe,WADrC;AAAA,KAEC,cAAc,WAAW,WAF1B;AAAA,KAGC,QAAQ,WAAW,KAHpB;AAAA,KAIC,OAAO,YAAY,CAAE,CAJtB;AAAA,KAKC,OAAO,WAAW,IALnB;;;AAQA,oBAAmB,MAAnB,GAA4B,MAAM,mBAAmB,GAAzB,EAA8B;AACzD,UAAQ,CAAC,KAAD,EAAQ,KAAR,CADiD;AAEzD,SAAO,KAFkD;AAGzD,aAAW,KAH8C;AAIzD,UAAQ,MAJiD;AAKzD,cAAY,KAL6C;;AAOzD,cAAY;;AAEX,mBAAgB,CAFL;AAGX,mBAAgB;AAHL,GAP6C;AAYzD,QAAM,IAZmD,E;AAazD,UAAQ;AACP,WAAQ;AACP,WAAO,SADA;AAEP,iBAAa,SAFN;AAGP,YAAQ;AAHD;AADD;AAbiD,EAA9B,CAA5B;;AAuBA,aAAY,MAAZ,GAAqB,WAAW,WAAX,CAAuB,YAAY,GAAnC,EAAwC;;AAE5D,QAAM,QAFsD;AAG5D,WAAS,IAHmD;;;;;AAQ5D,aAAW,YAAY;;AAEtB;;AAEC,eAAY,UAAU,MAAV,EAAkB,UAAlB,EAA8B;AACzC,WAAQ,KAAD,CAAO,IAAP,CAAY,MAAZ,IACN,aAAa,SAAS,MAAT,EAAiB,EAAjB,CAAb,GAAoC,GAD9B,GAEN,SAAS,MAAT,EAAiB,EAAjB;AAFD;AAGA,IANF;AAAA,OAQC,MAAM,CARP;AAAA,OASC,SAAS,IATV;AAAA,OAUC,QAAQ,OAAO,KAVhB;AAAA,OAWC,YAAY,MAAM,SAXnB;AAAA,OAYC,aAAa,MAAM,UAZpB;AAAA,OAaC,aAAa,CAbd;AAAA,O;AAcC,aAAU,OAAO,OAdlB;AAAA,OAeC,SAAS,QAAQ,MAflB;AAAA,OAgBC,UAAU,UAAU,OAAO,CAAP,CAAV,EAAqB,SAArB,CAhBX;AAAA,OAiBC,UAAU,UAAU,OAAO,CAAP,CAAV,EAAqB,UAArB,CAjBX;AAAA,OAkBC,QAAQ,UAAU,QAAQ,KAAlB,EAAyB,SAAzB,CAlBT;AAAA,OAmBC,SAnBD;AAAA,OAoBC,UApBD;AAAA,OAqBC,SAAS,UAAU,QAAQ,MAAlB,EAA0B,UAA1B,CArBV;AAAA,OAsBC,YAAY,UAAU,QAAQ,SAAlB,EAA6B,SAA7B,CAtBb;AAAA,OAuBC,aAAa,UAAU,QAAQ,UAAlB,EAA8B,UAA9B,CAvBd;AAAA,OAwBC,QAAQ,SAAS,UAxBlB;AAAA,OAyBC,OAAO,OAAO,IAzBf;AAAA,OA0BC,IA1BD;AAAA,OA2BC,QA3BD;AAAA,OA4BC,OAAO,QAAQ,UAAR,CAAmB,QAAnB,KAAgC,MAAhC,GAAyC,CAAzC,GAA6C,CA5BrD;AAAA,OA8BC,EA9BD;AAAA,OA+BC,EA/BD;AAAA,OAgCC,EAhCD;AAAA,OAiCC,EAjCD;AAAA,OAkCC,EAlCD;AAAA,OAmCC,EAnCD;AAAA,OAoCC,EApCD;;;AAuCA,UAAO,UAAP,GAAoB,aAAa,UAAU,CAAV,EAAa;AAC7C,WAAO,IAAI,SAAS,UAAb,IAA2B,WAAW,UAAtC,GACN,SADM,GAEN,YAAY,CAAC,QAAQ,SAAT,KAAuB,CAAC,SAAS,UAAT,GAAsB,CAAvB,KAA6B,SAAS,UAAtC,CAAvB,CAFb;AAGA,IAJD;AAKA,UAAO,IAAP,GAAc,UAAU,CAAV,EAAa,IAAb,EAAmB;AAChC,WAAO,UAAU,CAAC,OAAO,CAAC,CAAR,GAAY,CAAb,KAAoB,WAAW,CAAX,IAAgB,CAAjB,GAAsB,QAAQ,UAAR,CAAmB,QAA5D,CAAjB;AACA,IAFD;;;AAKA,UAAO,MAAP,GAAgB,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CAAhB;AACA,UAAO,OAAP,GAAiB,OAAjB;;;;;;;;;;;;;;;;;;;;;;AAyBA,QAAK,IAAL,EAAW,UAAU,KAAV,EAAiB;AAC3B,WAAO,MAAM,CAAb;AACA,IAFD;;AAIA,QAAK,IAAL,EAAW,UAAU,KAAV,EAAiB;;AAE3B,SAAK,IAAL;AACA,eAAW,MAAM,MAAM,CAAN,GAAU,GAAhB,GAAsB,CAAjC;AACA,SAAK,UAAU,SAAS,CAAnB,GAAuB,aAAa,MAAzC;AACA,SAAK,KAAK,WAAW,MAArB;;AAEA,gBAAY,WAAW,EAAX,CAAZ;AACA,SAAK,UAAU,YAAY,CAA3B;AACA,SAAK,KAAK,SAAV;AACA,gBAAY,WAAW,EAAX,CAAZ;AACA,SAAK,UAAU,YAAY,CAA3B;AACA,SAAK,KAAK,SAAV;;;AAGA,QAAI,KAAK,KAAT,EAAgB;AACf,UAAK,KAAK,UAAU,YAAY,CAAhC;AACA,UAAK,KAAK,UAAU,YAAY,CAAhC;;;AAGA,KALD,MAKO,IAAI,KAAK,KAAT,EAAgB;AACtB,UAAK,EAAL;;AAEA,iBAAY,WAAW,KAAX,CAAZ;AACA,UAAK,UAAU,YAAY,CAA3B;AACA,UAAK,KAAK,SAAV;;AAEA,UAAK,KAAL;AACA;;;AAGD,WAAO,CACN,GADM,EAEN,EAFM,EAEF,EAFE,EAGN,GAHM,EAIN,EAJM,EAIF,EAJE,EAKN,EALM,EAKF,EALE,CAAP;AAOA,QAAI,EAAJ,EAAQ;AACP,UAAK,IAAL,CAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AACA;AACD,SAAK,IAAL,CAAU,EAAV,EAAc,EAAd,EAAkB,GAAlB;;;AAGA,UAAM,SAAN,GAAkB,MAAlB;AACA,UAAM,SAAN,GAAkB,EAAE,GAAG,IAAL,EAAlB;;;AAIA,UAAM,UAAN,GAAmB,WAAW,GAA9B;AACA,UAAM,KAAN,GAAc,OAAd;AACA,UAAM,KAAN,GAAc,CAAC,MAAM,MAAM,EAAZ,CAAD,IAAoB,CAAlC;;;AAGA,UAAM,UAAN,GAAmB,CAClB,OADkB,EAElB,MAAM,KAFY,CAAnB;;;AAMA,UAAM,KAAN,GAAc,IAAd;;;AAGA,UAAM,IAAN,GAAa,IAAb;;AAEA,kBAAc,QAAd;AACA,IAlED;;AAqEA,UAAO,gBAAP;AACA,GA/J2D;;;;;;;AAsK5D,cAAY,YAAY;AACvB,OAAI,SAAS,IAAb;AAAA,OACC,UAAU,OAAO,OADlB;AAAA,OAEC,QAAQ,OAAO,KAFhB;AAAA,OAGC,WAAW,MAAM,QAHlB;;AAKA,QAAK,OAAO,IAAZ,EAAkB,UAAU,KAAV,EAAiB;;AAElC,QAAI,UAAU,MAAM,OAApB;AAAA,QACC,YAAY,MAAM,SADnB;;AAGA,QAAI,CAAC,OAAL,EAAc;;AACb,WAAM,OAAN,GAAgB,SAAS,IAAT,CAAc,SAAd,EACf,IADe,CACV;AACJ,YAAM,MAAM,KADR;AAEJ,cAAQ,QAAQ,WAFZ;AAGJ,sBAAgB,QAAQ;AAHpB,MADU,EAMf,GANe,CAMX,OAAO,KANI,CAAhB;AAQA,KATD,MASO;;AACN,aAAQ,OAAR,CAAgB,SAAhB;AACA;AACD,IAjBD;AAkBA,GA9L2D;;;;;AAmM5D,eAAa,IAnM+C;;;;;AAwM5D,kBAAgB,YAAY;AAC3B,OAAI,OAAO,KAAK,IAAhB;AAAA,OACC,gBAAgB,KAAK,OAAL,CAAa,UAAb,CAAwB,QADzC;AAAA,OAEC,QAFD;AAAA,OAGC,IAHD;AAAA,OAIC,KAJD;AAAA,OAKC,IAAI,KAAK,MALV;AAAA,OAMC,CAND;AAAA,OAOC,CAPD;;;;;AAYA,QAAK,MAAL,CAAY,CAAZ,KAAkB,IAAI,aAAtB;;;AAGA,UAAO,GAAP,EAAY;AACX,YAAQ,KAAK,CAAL,CAAR;AACA,eAAW,MAAM,IAAjB;AACA,WAAO,WAAW,CAAX,GAAe,CAAC,CAAvB;AACA,QAAI,MAAM,KAAV;AACA,QAAI,KAAK,IAAL,CAAU,CAAV,EAAa,QAAb,CAAJ;;;AAGA,UAAM,QAAN,GAAiB,CAChB,CADgB,E;AAEhB,KAFgB,E;AAGhB,QAAI,CAAC,gBAAgB,CAAjB,IAAsB,IAHV,E;AAIhB,KAJgB,E;AAKhB,QAAI,gBAAgB,IALJ,E;AAMhB,KANgB,E;AAOhB,eAAW,OAAX,GAAqB,MAPL,E;AAQhB,K;AARgB,KAAjB;AAUA;;AAED,eAAY,GAAZ,CAAgB,SAAhB,CAA0B,cAA1B,CAAyC,IAAzC,CAA8C,IAA9C;AACA;;AA7O2D,EAAxC,CAArB;AAkPC,CAtRA,EAsRC,UAtRD,CAAD","file":"funnel.src-compiled.js","sourcesContent":["/**\n * @license \n * Highcharts funnel module, Beta\n *\n * (c) 2010-2012 Torstein HÃ¸nsi\n *\n * License: www.highcharts.com/license\n */\n\n/*global Highcharts */\n(function (Highcharts) {\n\t\n'use strict';\n\n// create shortcuts\nvar defaultOptions = Highcharts.getOptions(),\n\tdefaultPlotOptions = defaultOptions.plotOptions,\n\tseriesTypes = Highcharts.seriesTypes,\n\tmerge = Highcharts.merge,\n\tnoop = function () {},\n\teach = Highcharts.each;\n\n// set default options\ndefaultPlotOptions.funnel = merge(defaultPlotOptions.pie, {\n\tcenter: ['50%', '50%'],\n\twidth: '90%',\n\tneckWidth: '30%',\n\theight: '100%',\n\tneckHeight: '25%',\n\n\tdataLabels: {\n\t\t//position: 'right',\n\t\tconnectorWidth: 1,\n\t\tconnectorColor: '#606060'\n\t},\n\tsize: true, // to avoid adapting to data label size in Pie.drawDataLabels\n\tstates: {\n\t\tselect: {\n\t\t\tcolor: '#C0C0C0',\n\t\t\tborderColor: '#000000',\n\t\t\tshadow: false\n\t\t}\n\t}\t\n});\n\n\nseriesTypes.funnel = Highcharts.extendClass(seriesTypes.pie, {\n\t\n\ttype: 'funnel',\n\tanimate: noop,\n\n\t/**\n\t * Overrides the pie translate method\n\t */\n\ttranslate: function () {\n\t\t\n\t\tvar \n\t\t\t// Get positions - either an integer or a percentage string must be given\n\t\t\tgetLength = function (length, relativeTo) {\n\t\t\t\treturn (/%$/).test(length) ?\n\t\t\t\t\trelativeTo * parseInt(length, 10) / 100 :\n\t\t\t\t\tparseInt(length, 10);\n\t\t\t},\n\t\t\t\n\t\t\tsum = 0,\n\t\t\tseries = this,\n\t\t\tchart = series.chart,\n\t\t\tplotWidth = chart.plotWidth,\n\t\t\tplotHeight = chart.plotHeight,\n\t\t\tcumulative = 0, // start at top\n\t\t\toptions = series.options,\n\t\t\tcenter = options.center,\n\t\t\tcenterX = getLength(center[0], plotWidth),\n\t\t\tcenterY = getLength(center[0], plotHeight),\n\t\t\twidth = getLength(options.width, plotWidth),\n\t\t\ttempWidth,\n\t\t\tgetWidthAt,\n\t\t\theight = getLength(options.height, plotHeight),\n\t\t\tneckWidth = getLength(options.neckWidth, plotWidth),\n\t\t\tneckHeight = getLength(options.neckHeight, plotHeight),\n\t\t\tneckY = height - neckHeight,\n\t\t\tdata = series.data,\n\t\t\tpath,\n\t\t\tfraction,\n\t\t\thalf = options.dataLabels.position === 'left' ? 1 : 0,\n\n\t\t\tx1, \n\t\t\ty1, \n\t\t\tx2, \n\t\t\tx3, \n\t\t\ty3, \n\t\t\tx4, \n\t\t\ty5;\n\n\t\t// Return the width at a specific y coordinate\n\t\tseries.getWidthAt = getWidthAt = function (y) {\n\t\t\treturn y > height - neckHeight || height === neckHeight ?\n\t\t\t\tneckWidth :\n\t\t\t\tneckWidth + (width - neckWidth) * ((height - neckHeight - y) / (height - neckHeight));\n\t\t};\n\t\tseries.getX = function (y, half) {\n\t\t\treturn centerX + (half ? -1 : 1) * ((getWidthAt(y) / 2) + options.dataLabels.distance);\n\t\t};\n\n\t\t// Expose\n\t\tseries.center = [centerX, centerY, height];\n\t\tseries.centerX = centerX;\n\n\t\t/*\n\t\t * Individual point coordinate naming:\n\t\t *\n\t\t * x1,y1 _________________ x2,y1\n\t\t *  \\                         /\n\t\t *   \\                       /\n\t\t *    \\                     /\n\t\t *     \\                   /\n\t\t *      \\                 /\n\t\t *     x3,y3 _________ x4,y3\n\t\t *\n\t\t * Additional for the base of the neck:\n\t\t *\n\t\t *       |               |\n\t\t *       |               |\n\t\t *       |               |\n\t\t *     x3,y5 _________ x4,y5\n\t\t */\n\n\n\n\n\t\t// get the total sum\n\t\teach(data, function (point) {\n\t\t\tsum += point.y;\n\t\t});\n\n\t\teach(data, function (point) {\n\t\t\t// set start and end positions\n\t\t\ty5 = null;\n\t\t\tfraction = sum ? point.y / sum : 0;\n\t\t\ty1 = centerY - height / 2 + cumulative * height;\n\t\t\ty3 = y1 + fraction * height;\n\t\t\t//tempWidth = neckWidth + (width - neckWidth) * ((height - neckHeight - y1) / (height - neckHeight));\n\t\t\ttempWidth = getWidthAt(y1);\n\t\t\tx1 = centerX - tempWidth / 2;\n\t\t\tx2 = x1 + tempWidth;\n\t\t\ttempWidth = getWidthAt(y3);\n\t\t\tx3 = centerX - tempWidth / 2;\n\t\t\tx4 = x3 + tempWidth;\n\n\t\t\t// the entire point is within the neck\n\t\t\tif (y1 > neckY) {\n\t\t\t\tx1 = x3 = centerX - neckWidth / 2;\n\t\t\t\tx2 = x4 = centerX + neckWidth / 2;\n\t\t\t\n\t\t\t// the base of the neck\n\t\t\t} else if (y3 > neckY) {\n\t\t\t\ty5 = y3;\n\n\t\t\t\ttempWidth = getWidthAt(neckY);\n\t\t\t\tx3 = centerX - tempWidth / 2;\n\t\t\t\tx4 = x3 + tempWidth;\n\n\t\t\t\ty3 = neckY;\n\t\t\t}\n\n\t\t\t// save the path\n\t\t\tpath = [\n\t\t\t\t'M',\n\t\t\t\tx1, y1,\n\t\t\t\t'L',\n\t\t\t\tx2, y1,\n\t\t\t\tx4, y3\n\t\t\t];\n\t\t\tif (y5) {\n\t\t\t\tpath.push(x4, y5, x3, y5);\n\t\t\t}\n\t\t\tpath.push(x3, y3, 'Z');\n\n\t\t\t// prepare for using shared dr\n\t\t\tpoint.shapeType = 'path';\n\t\t\tpoint.shapeArgs = { d: path };\n\n\n\t\t\t// for tooltips and data labels\n\t\t\tpoint.percentage = fraction * 100;\n\t\t\tpoint.plotX = centerX;\n\t\t\tpoint.plotY = (y1 + (y5 || y3)) / 2;\n\n\t\t\t// Placement of tooltips and data labels\n\t\t\tpoint.tooltipPos = [\n\t\t\t\tcenterX,\n\t\t\t\tpoint.plotY\n\t\t\t];\n\n\t\t\t// Slice is a noop on funnel points\n\t\t\tpoint.slice = noop;\n\t\t\t\n\t\t\t// Mimicking pie data label placement logic\n\t\t\tpoint.half = half;\n\n\t\t\tcumulative += fraction;\n\t\t});\n\n\n\t\tseries.setTooltipPoints();\n\t},\n\t/**\n\t * Draw a single point (wedge)\n\t * @param {Object} point The point object\n\t * @param {Object} color The color of the point\n\t * @param {Number} brightness The brightness relative to the color\n\t */\n\tdrawPoints: function () {\n\t\tvar series = this,\n\t\t\toptions = series.options,\n\t\t\tchart = series.chart,\n\t\t\trenderer = chart.renderer;\n\n\t\teach(series.data, function (point) {\n\t\t\t\n\t\t\tvar graphic = point.graphic,\n\t\t\t\tshapeArgs = point.shapeArgs;\n\n\t\t\tif (!graphic) { // Create the shapes\n\t\t\t\tpoint.graphic = renderer.path(shapeArgs).\n\t\t\t\t\tattr({\n\t\t\t\t\t\tfill: point.color,\n\t\t\t\t\t\tstroke: options.borderColor,\n\t\t\t\t\t\t'stroke-width': options.borderWidth\n\t\t\t\t\t}).\n\t\t\t\t\tadd(series.group);\n\t\t\t\t\t\n\t\t\t} else { // Update the shapes\n\t\t\t\tgraphic.animate(shapeArgs);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Funnel items don't have angles (#2289)\n\t */\n\tsortByAngle: noop,\n\t\n\t/**\n\t * Extend the pie data label method\n\t */\n\tdrawDataLabels: function () {\n\t\tvar data = this.data,\n\t\t\tlabelDistance = this.options.dataLabels.distance,\n\t\t\tleftSide,\n\t\t\tsign,\n\t\t\tpoint,\n\t\t\ti = data.length,\n\t\t\tx,\n\t\t\ty;\n\t\t\n\t\t// In the original pie label anticollision logic, the slots are distributed\n\t\t// from one labelDistance above to one labelDistance below the pie. In funnels\n\t\t// we don't want this.\n\t\tthis.center[2] -= 2 * labelDistance;\n\t\t\n\t\t// Set the label position array for each point.\n\t\twhile (i--) {\n\t\t\tpoint = data[i];\n\t\t\tleftSide = point.half;\n\t\t\tsign = leftSide ? 1 : -1;\n\t\t\ty = point.plotY;\n\t\t\tx = this.getX(y, leftSide);\n\t\t\t\t\n\t\t\t// set the anchor point for data labels\n\t\t\tpoint.labelPos = [\n\t\t\t\t0, // first break of connector\n\t\t\t\ty, // a/a\n\t\t\t\tx + (labelDistance - 5) * sign, // second break, right outside point shape\n\t\t\t\ty, // a/a\n\t\t\t\tx + labelDistance * sign, // landing point for connector\n\t\t\t\ty, // a/a\n\t\t\t\tleftSide ? 'right' : 'left', // alignment\n\t\t\t\t0 // center angle\n\t\t\t];\n\t\t}\n\t\t\n\t\tseriesTypes.pie.prototype.drawDataLabels.call(this);\n\t}\n\n});\n\n\n}(Highcharts));\n"]}