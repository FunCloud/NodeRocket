{"version":3,"sources":["annotations.src.js"],"names":[],"mappings":"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","file":"annotations.src-compiled.js","sourcesContent":["(function (Highcharts, HighchartsAdapter) {\n\nvar UNDEFINED,\n\tALIGN_FACTOR,\n\tALLOWED_SHAPES,\n\tChart = Highcharts.Chart,\n\textend = Highcharts.extend,\n\teach = Highcharts.each;\n\nALLOWED_SHAPES = [\"path\", \"rect\", \"circle\"];\n\nALIGN_FACTOR = {\n\ttop: 0,\n\tleft: 0,\n\tcenter: 0.5,\n\tmiddle: 0.5,\n\tbottom: 1,\n\tright: 1\n};\n\n\n// Highcharts helper methods\nvar inArray = HighchartsAdapter.inArray,\n\tmerge = Highcharts.merge;\n\nfunction defaultOptions(shapeType) {\n\tvar shapeOptions,\n\t\toptions;\n\n\toptions = {\n\t\txAxis: 0,\n\t\tyAxis: 0,\n\t\ttitle: {\n\t\t\tstyle: {},\n\t\t\ttext: \"\",\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\tshape: {\n\t\t\tparams: {\n\t\t\t\tstroke: \"#000000\",\n\t\t\t\tfill: \"transparent\",\n\t\t\t\tstrokeWidth: 2\n\t\t\t}\n\t\t}\n\t};\n\n\tshapeOptions = {\n\t\tcircle: {\n\t\t\tparams: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t}\n\t\t}\n\t};\n\n\tif (shapeOptions[shapeType]) {\n\t\toptions.shape = merge(options.shape, shapeOptions[shapeType]);\n\t}\n\n\treturn options;\n}\n\nfunction isArray(obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nfunction isNumber(n) {\n\treturn typeof n === 'number';\n}\n\nfunction defined(obj) {\n\treturn obj !== UNDEFINED && obj !== null;\n}\n\nfunction translatePath(d, xAxis, yAxis, xOffset, yOffset) {\n\tvar len = d.length,\n\t\ti = 0;\n\n\twhile (i < len) {\n\t\tif (typeof d[i] === 'number' && typeof d[i + 1] === 'number') {\n\t\t\td[i] = xAxis.toPixels(d[i]) - xOffset;\n\t\t\td[i + 1] = yAxis.toPixels(d[i + 1]) - yOffset;\n\t\t\ti += 2;\n\t\t} else {\n\t\t\ti += 1;\n\t\t}\n\t}\n\n\treturn d;\n}\n\n\n// Define annotation prototype\nvar Annotation = function () {\n\tthis.init.apply(this, arguments);\n};\nAnnotation.prototype = {\n\t/* \n\t * Initialize the annotation\n\t */\n\tinit: function (chart, options) {\n\t\tvar shapeType = options.shape && options.shape.type;\n\n\t\tthis.chart = chart;\n\t\tthis.options = merge({}, defaultOptions(shapeType), options);\n\t},\n\n\t/*\n\t * Render the annotation\n\t */\n\trender: function (redraw) {\n\t\tvar annotation = this,\n\t\t\tchart = this.chart,\n\t\t\trenderer = annotation.chart.renderer,\n\t\t\tgroup = annotation.group,\n\t\t\ttitle = annotation.title,\n\t\t\tshape = annotation.shape,\n\t\t\toptions = annotation.options,\n\t\t\ttitleOptions = options.title,\n\t\t\tshapeOptions = options.shape;\n\n\t\tif (!group) {\n\t\t\tgroup = annotation.group = renderer.g();\n\t\t}\n\n\n\t\tif (!shape && shapeOptions && inArray(shapeOptions.type, ALLOWED_SHAPES) !== -1) {\n\t\t\tshape = annotation.shape = renderer[options.shape.type](shapeOptions.params);\n\t\t\tshape.add(group);\n\t\t}\n\n\t\tif (!title && titleOptions) {\n\t\t\ttitle = annotation.title = renderer.label(titleOptions);\n\t\t\ttitle.add(group);\n\t\t}\n\n\t\tgroup.add(chart.annotations.group);\n\n\t\t// link annotations to point or series\n\t\tannotation.linkObjects();\n\n\t\tif (redraw !== false) {\n\t\t\tannotation.redraw();\n\t\t}\n\t},\n\n\t/*\n\t * Redraw the annotation title or shape after options update\n\t */\n\tredraw: function () {\n\t\tvar options = this.options,\n\t\t\tchart = this.chart,\n\t\t\tgroup = this.group,\n\t\t\ttitle = this.title,\n\t\t\tshape = this.shape,\n\t\t\tlinkedTo = this.linkedObject,\n\t\t\txAxis = chart.xAxis[options.xAxis],\n\t\t\tyAxis = chart.yAxis[options.yAxis],\n\t\t\twidth = options.width,\n\t\t\theight = options.height,\n\t\t\tanchorY = ALIGN_FACTOR[options.anchorY],\n\t\t\tanchorX = ALIGN_FACTOR[options.anchorX],\n\t\t\tresetBBox = false,\n\t\t\tshapeParams,\n\t\t\tlinkType,\n\t\t\tseries,\n\t\t\tparam,\n\t\t\tbbox,\n\t\t\tx,\n\t\t\ty;\n\n\t\tif (linkedTo) {\n\t\t\tlinkType = (linkedTo instanceof Highcharts.Point) ? 'point' :\n\t\t\t\t\t\t(linkedTo instanceof Highcharts.Series) ? 'series' : null;\n\n\t\t\tif (linkType === 'point') {\n\t\t\t\toptions.xValue = linkedTo.x;\n\t\t\t\toptions.yValue = linkedTo.y;\n\t\t\t\tseries = linkedTo.series;\n\t\t\t} else if (linkType === 'series') {\n\t\t\t\tseries = linkedTo;\n\t\t\t}\n\n\t\t\tif (group.visibility !== series.group.visibility) {\n\t\t\t\tgroup.attr({\n\t\t\t\t\tvisibility: series.group.visibility\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\t// Based on given options find annotation pixel position\n\t\tx = (defined(options.xValue) ? xAxis.toPixels(options.xValue + xAxis.minPointOffset) - xAxis.minPixelPadding : options.x);\n\t\ty = defined(options.yValue) ? yAxis.toPixels(options.yValue) : options.y;\n\n\t\tif (isNaN(x) || isNaN(y) || !isNumber(x) || !isNumber(y)) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tif (title) {\n\t\t\ttitle.attr(options.title);\n\t\t\ttitle.css(options.title.style);\n\t\t\tresetBBox = true;\n\t\t}\n\n\t\tif (shape) {\n\t\t\tshapeParams = extend({}, options.shape.params);\n\n\t\t\tif (options.units === 'values') {\n\t\t\t\tfor (param in shapeParams) {\n\t\t\t\t\tif (inArray(param, ['width', 'x']) > -1) {\n\t\t\t\t\t\tshapeParams[param] = xAxis.translate(shapeParams[param]);\n\t\t\t\t\t} else if (inArray(param, ['height', 'y']) > -1) {\n\t\t\t\t\t\tshapeParams[param] = yAxis.translate(shapeParams[param]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shapeParams.width) {\n\t\t\t\t\tshapeParams.width -= xAxis.toPixels(0) - xAxis.left;\n\t\t\t\t}\n\n\t\t\t\tif (shapeParams.x) {\n\t\t\t\t\tshapeParams.x += xAxis.minPixelPadding;\n\t\t\t\t}\n\n\t\t\t\tif (options.shape.type === 'path') {\n\t\t\t\t\ttranslatePath(shapeParams.d, xAxis, yAxis, x, y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// move the center of the circle to shape x/y\n\t\t\tif (options.shape.type === 'circle') {\n\t\t\t\tshapeParams.x += shapeParams.r;\n\t\t\t\tshapeParams.y += shapeParams.r;\n\t\t\t}\n\n\t\t\tresetBBox = true;\n\t\t\tshape.attr(shapeParams);\n\t\t}\n\n\t\tgroup.bBox = null;\n\n\t\t// If annotation width or height is not defined in options use bounding box size\n\t\tif (!isNumber(width)) {\n\t\t\tbbox = group.getBBox();\n\t\t\twidth = bbox.width;\n\t\t}\n\n\t\tif (!isNumber(height)) {\n\t\t\t// get bbox only if it wasn't set before\n\t\t\tif (!bbox) {\n\t\t\t\tbbox = group.getBBox();\n\t\t\t}\n\n\t\t\theight = bbox.height;\n\t\t}\n\n\t\t// Calculate anchor point\n\t\tif (!isNumber(anchorX)) {\n\t\t\tanchorX = ALIGN_FACTOR.center;\n\t\t}\n\n\t\tif (!isNumber(anchorY)) {\n\t\t\tanchorY = ALIGN_FACTOR.center;\n\t\t}\n\n\t\t// Translate group according to its dimension and anchor point\n\t\tx = x - width * anchorX;\n\t\ty = y - height * anchorY;\n\n\t\tif (chart.animation && defined(group.translateX) && defined(group.translateY)) {\n\t\t\tgroup.animate({\n\t\t\t\ttranslateX: x,\n\t\t\t\ttranslateY: y\n\t\t\t});\n\t\t} else {\n\t\t\tgroup.translate(x, y);\n\t\t}\n\t},\n\n\t/*\n\t * Destroy the annotation\n\t */\n\tdestroy: function () {\n\t\tvar annotation = this,\n\t\t\tchart = this.chart,\n\t\t\tallItems = chart.annotations.allItems,\n\t\t\tindex = allItems.indexOf(annotation);\n\n\t\tif (index > -1) {\n\t\t\tallItems.splice(index, 1);\n\t\t}\n\n\t\teach(['title', 'shape', 'group'], function (element) {\n\t\t\tif (annotation[element]) {\n\t\t\t\tannotation[element].destroy();\n\t\t\t\tannotation[element] = null;\n\t\t\t}\n\t\t});\n\n\t\tannotation.group = annotation.title = annotation.shape = annotation.chart = annotation.options = null;\n\t},\n\n\t/*\n\t * Update the annotation with a given options\n\t */\n\tupdate: function (options, redraw) {\n\t\textend(this.options, options);\n\n\t\t// update link to point or series\n\t\tthis.linkObjects();\n\n\t\tthis.render(redraw);\n\t},\n\n\tlinkObjects: function () {\n\t\tvar annotation = this,\n\t\t\tchart = annotation.chart,\n\t\t\tlinkedTo = annotation.linkedObject,\n\t\t\tlinkedId = linkedTo && (linkedTo.id || linkedTo.options.id),\n\t\t\toptions = annotation.options,\n\t\t\tid = options.linkedTo;\n\n\t\tif (!defined(id)) {\n\t\t\tannotation.linkedObject = null;\n\t\t} else if (!defined(linkedTo) || id !== linkedId) {\n\t\t\tannotation.linkedObject = chart.get(id);\n\t\t}\n\t}\n};\n\n\n// Add annotations methods to chart prototype\nextend(Chart.prototype, {\n\tannotations: {\n\t\t/*\n\t\t * Unified method for adding annotations to the chart\n\t\t */\n\t\tadd: function (options, redraw) {\n\t\t\tvar annotations = this.allItems,\n\t\t\t\tchart = this.chart,\n\t\t\t\titem,\n\t\t\t\tlen;\n\n\t\t\tif (!isArray(options)) {\n\t\t\t\toptions = [options];\n\t\t\t}\n\n\t\t\tlen = options.length;\n\n\t\t\twhile (len--) {\n\t\t\t\titem = new Annotation(chart, options[len]);\n\t\t\t\tannotations.push(item);\n\t\t\t\titem.render(redraw);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Redraw all annotations, method used in chart events\n\t\t */\n\t\tredraw: function () {\n\t\t\teach(this.allItems, function (annotation) {\n\t\t\t\tannotation.redraw();\n\t\t\t});\n\t\t}\n\t}\n});\n\n\n// Initialize on chart load\nChart.prototype.callbacks.push(function (chart) {\n\tvar options = chart.options.annotations,\n\t\tgroup;\n\n\tgroup = chart.renderer.g(\"annotations\");\n\tgroup.attr({\n\t\tzIndex: 7\n\t});\n\tgroup.add();\n\n\t// initialize empty array for annotations\n\tchart.annotations.allItems = [];\n\n\t// link chart object to annotations\n\tchart.annotations.chart = chart;\n\n\t// link annotations group element to the chart\n\tchart.annotations.group = group;\n\n\tif (isArray(options) && options.length > 0) {\n\t\tchart.annotations.add(chart.options.annotations);\n\t}\n\n\t// update annotations after chart redraw\n\tHighcharts.addEvent(chart, 'redraw', function () {\n\t\tchart.annotations.redraw();\n\t});\n});\n}(Highcharts, HighchartsAdapter));\n"]}