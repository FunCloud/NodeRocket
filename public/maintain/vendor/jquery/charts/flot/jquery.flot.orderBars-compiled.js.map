{"version":3,"sources":["jquery.flot.orderBars.js"],"names":[],"mappings":"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","file":"jquery.flot.orderBars-compiled.js","sourcesContent":["/*\r\n * Flot plugin to order bars side by side.\r\n * \r\n * Released under the MIT license by Benjamin BUFFET, 20-Sep-2010.\r\n *\r\n * This plugin is an alpha version.\r\n *\r\n * To activate the plugin you must specify the parameter \"order\" for the specific serie :\r\n *\r\n *  $.plot($(\"#placeholder\"), [{ data: [ ... ], bars :{ order = null or integer }])\r\n *\r\n * If 2 series have the same order param, they are ordered by the position in the array;\r\n *\r\n * The plugin adjust the point by adding a value depanding of the barwidth\r\n * Exemple for 3 series (barwidth : 0.1) :\r\n *\r\n *          first bar décalage : -0.15\r\n *          second bar décalage : -0.05\r\n *          third bar décalage : 0.05\r\n *\r\n */\r\n\r\n(function($){\r\n    function init(plot){\r\n        var orderedBarSeries;\r\n        var nbOfBarsToOrder;\r\n        var borderWidth;\r\n        var borderWidthInXabsWidth;\r\n        var pixelInXWidthEquivalent = 1;\r\n        var isHorizontal = false;\r\n\r\n        /*\r\n         * This method add shift to x values\r\n         */\r\n        function reOrderBars(plot, serie, datapoints){\r\n            var shiftedPoints = null;\r\n            \r\n            if(serieNeedToBeReordered(serie)){                \r\n                checkIfGraphIsHorizontal(serie);\r\n                calculPixel2XWidthConvert(plot);\r\n                retrieveBarSeries(plot);\r\n                calculBorderAndBarWidth(serie);\r\n                \r\n                if(nbOfBarsToOrder >= 2){  \r\n                    var position = findPosition(serie);\r\n                    var decallage = 0;\r\n                    \r\n                    var centerBarShift = calculCenterBarShift();\r\n\r\n                    if (isBarAtLeftOfCenter(position)){\r\n                        decallage = -1*(sumWidth(orderedBarSeries,position-1,Math.floor(nbOfBarsToOrder / 2)-1)) - centerBarShift;\r\n                    }else{\r\n                        decallage = sumWidth(orderedBarSeries,Math.ceil(nbOfBarsToOrder / 2),position-2) + centerBarShift + borderWidthInXabsWidth*2;\r\n                    }\r\n\r\n                    shiftedPoints = shiftPoints(datapoints,serie,decallage);\r\n                    datapoints.points = shiftedPoints;\r\n               }\r\n           }\r\n           return shiftedPoints;\r\n        }\r\n\r\n        function serieNeedToBeReordered(serie){\r\n            return serie.bars != null\r\n                && serie.bars.show\r\n                && serie.bars.order != null;\r\n        }\r\n\r\n        function calculPixel2XWidthConvert(plot){\r\n            var gridDimSize = isHorizontal ? plot.getPlaceholder().innerHeight() : plot.getPlaceholder().innerWidth();\r\n            var minMaxValues = isHorizontal ? getAxeMinMaxValues(plot.getData(),1) : getAxeMinMaxValues(plot.getData(),0);\r\n            var AxeSize = minMaxValues[1] - minMaxValues[0];\r\n            pixelInXWidthEquivalent = AxeSize / gridDimSize;\r\n        }\r\n\r\n        function getAxeMinMaxValues(series,AxeIdx){\r\n            var minMaxValues = new Array();\r\n            for(var i = 0; i < series.length; i++){\r\n                minMaxValues[0] = series[i].data[0][AxeIdx];\r\n                minMaxValues[1] = series[i].data[series[i].data.length - 1][AxeIdx];\r\n            }\r\n            return minMaxValues;\r\n        }\r\n\r\n        function retrieveBarSeries(plot){\r\n            orderedBarSeries = findOthersBarsToReOrders(plot.getData());\r\n            nbOfBarsToOrder = orderedBarSeries.length;\r\n        }\r\n\r\n        function findOthersBarsToReOrders(series){\r\n            var retSeries = new Array();\r\n\r\n            for(var i = 0; i < series.length; i++){\r\n                if(series[i].bars.order != null && series[i].bars.show){\r\n                    retSeries.push(series[i]);\r\n                }\r\n            }\r\n\r\n            return retSeries.sort(sortByOrder);\r\n        }\r\n\r\n        function sortByOrder(serie1,serie2){\r\n            var x = serie1.bars.order;\r\n            var y = serie2.bars.order;\r\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n        }\r\n\r\n        function  calculBorderAndBarWidth(serie){\r\n            borderWidth = serie.bars.lineWidth ? serie.bars.lineWidth  : 2;\r\n            borderWidthInXabsWidth = borderWidth * pixelInXWidthEquivalent;\r\n        }\r\n        \r\n        function checkIfGraphIsHorizontal(serie){\r\n            if(serie.bars.horizontal){\r\n                isHorizontal = true;\r\n            }\r\n        }\r\n\r\n        function findPosition(serie){\r\n            var pos = 0\r\n            for (var i = 0; i < orderedBarSeries.length; ++i) {\r\n                if (serie == orderedBarSeries[i]){\r\n                    pos = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return pos+1;\r\n        }\r\n\r\n        function calculCenterBarShift(){\r\n            var width = 0;\r\n\r\n            if(nbOfBarsToOrder%2 != 0)\r\n                width = (orderedBarSeries[Math.ceil(nbOfBarsToOrder / 2)].bars.barWidth)/2;\r\n\r\n            return width;\r\n        }\r\n\r\n        function isBarAtLeftOfCenter(position){\r\n            return position <= Math.ceil(nbOfBarsToOrder / 2);\r\n        }\r\n\r\n        function sumWidth(series,start,end){\r\n            var totalWidth = 0;\r\n\r\n            for(var i = start; i <= end; i++){\r\n                totalWidth += series[i].bars.barWidth+borderWidthInXabsWidth*2;\r\n            }\r\n\r\n            return totalWidth;\r\n        }\r\n\r\n        function shiftPoints(datapoints,serie,dx){\r\n            var ps = datapoints.pointsize;\r\n            var points = datapoints.points;\r\n            var j = 0;           \r\n            for(var i = isHorizontal ? 1 : 0;i < points.length; i += ps){\r\n                points[i] += dx;\r\n                //Adding the new x value in the serie to be abble to display the right tooltip value,\r\n                //using the index 3 to not overide the third index.\r\n                serie.data[j][3] = points[i];\r\n                j++;\r\n            }\r\n\r\n            return points;\r\n        }\r\n\r\n        plot.hooks.processDatapoints.push(reOrderBars);\r\n\r\n    }\r\n\r\n    var options = {\r\n        series : {\r\n            bars: {order: null} // or number/string\r\n        }\r\n    };\r\n\r\n    $.plot.plugins.push({\r\n        init: init,\r\n        options: options,\r\n        name: \"orderBars\",\r\n        version: \"0.2\"\r\n    });\r\n\r\n})(jQuery)\r\n\r\n"]}