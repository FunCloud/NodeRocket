{"version":3,"sources":["file-upload.js"],"names":[],"mappings":"AAAA,IAAI,UAAJ,CAAe,gBAAf,EAAiC,CAAC,QAAD,EAAW,cAAX,EAA2B,UAAS,MAAT,EAAiB,YAAjB,EAA+B;AACvF,QAAI,WAAW,OAAO,QAAP,GAAkB,IAAI,YAAJ,CAAiB;AAC9C,aAAK;AADyC,KAAjB,CAAjC;;;;AAMA,aAAS,OAAT,CAAiB,IAAjB,CAAsB;AAClB,cAAM,cADY;AAElB,YAAI,UAAS,I,0BAAT,EAAyC,OAAzC,EAAkD;AAClD,mBAAO,KAAK,KAAL,CAAW,MAAX,GAAoB,EAA3B;AACH;AAJiB,KAAtB;;;;AASA,aAAS,sBAAT,GAAkC,UAAS,I,0BAAT,EAAyC,MAAzC,EAAiD,OAAjD,EAA0D;AACxF,gBAAQ,IAAR,CAAa,wBAAb,EAAuC,IAAvC,EAA6C,MAA7C,EAAqD,OAArD;AACH,KAFD;AAGA,aAAS,iBAAT,GAA6B,UAAS,QAAT,EAAmB;AAC5C,gBAAQ,IAAR,CAAa,mBAAb,EAAkC,QAAlC;AACH,KAFD;AAGA,aAAS,gBAAT,GAA4B,UAAS,cAAT,EAAyB;AACjD,gBAAQ,IAAR,CAAa,kBAAb,EAAiC,cAAjC;AACH,KAFD;AAGA,aAAS,kBAAT,GAA8B,UAAS,IAAT,EAAe;AACzC,gBAAQ,IAAR,CAAa,oBAAb,EAAmC,IAAnC;AACH,KAFD;AAGA,aAAS,cAAT,GAA0B,UAAS,QAAT,EAAmB,QAAnB,EAA6B;AACnD,gBAAQ,IAAR,CAAa,gBAAb,EAA+B,QAA/B,EAAyC,QAAzC;AACH,KAFD;AAGA,aAAS,aAAT,GAAyB,UAAS,QAAT,EAAmB;AACxC,gBAAQ,IAAR,CAAa,eAAb,EAA8B,QAA9B;AACH,KAFD;AAGA,aAAS,aAAT,GAAyB,UAAS,QAAT,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C;AACnE,gBAAQ,IAAR,CAAa,eAAb,EAA8B,QAA9B,EAAwC,QAAxC,EAAkD,MAAlD,EAA0D,OAA1D;AACH,KAFD;AAGA,aAAS,WAAT,GAAuB,UAAS,QAAT,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C;AACjE,gBAAQ,IAAR,CAAa,aAAb,EAA4B,QAA5B,EAAsC,QAAtC,EAAgD,MAAhD,EAAwD,OAAxD;AACH,KAFD;AAGA,aAAS,YAAT,GAAwB,UAAS,QAAT,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C;AAClE,gBAAQ,IAAR,CAAa,cAAb,EAA6B,QAA7B,EAAuC,QAAvC,EAAiD,MAAjD,EAAyD,OAAzD;AACH,KAFD;AAGA,aAAS,cAAT,GAA0B,UAAS,QAAT,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C;AACpE,gBAAQ,IAAR,CAAa,gBAAb,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,MAAnD,EAA2D,OAA3D;AACH,KAFD;AAGA,aAAS,aAAT,GAAyB,YAAW;AAChC,gBAAQ,IAAR,CAAa,eAAb;AACH,KAFD;;AAIA,YAAQ,IAAR,CAAa,UAAb,EAAyB,QAAzB;AACH,CAnDgC,CAAjC","file":"file-upload-compiled.js","sourcesContent":["app.controller('FileUploadCtrl', ['$scope', 'FileUploader', function($scope, FileUploader) {\r\n    var uploader = $scope.uploader = new FileUploader({\r\n        url: 'js/controllers/upload.php'\r\n    });\r\n\r\n    // FILTERS\r\n\r\n    uploader.filters.push({\r\n        name: 'customFilter',\r\n        fn: function(item /*{File|FileLikeObject}*/, options) {\r\n            return this.queue.length < 10;\r\n        }\r\n    });\r\n\r\n    // CALLBACKS\r\n\r\n    uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\r\n        console.info('onWhenAddingFileFailed', item, filter, options);\r\n    };\r\n    uploader.onAfterAddingFile = function(fileItem) {\r\n        console.info('onAfterAddingFile', fileItem);\r\n    };\r\n    uploader.onAfterAddingAll = function(addedFileItems) {\r\n        console.info('onAfterAddingAll', addedFileItems);\r\n    };\r\n    uploader.onBeforeUploadItem = function(item) {\r\n        console.info('onBeforeUploadItem', item);\r\n    };\r\n    uploader.onProgressItem = function(fileItem, progress) {\r\n        console.info('onProgressItem', fileItem, progress);\r\n    };\r\n    uploader.onProgressAll = function(progress) {\r\n        console.info('onProgressAll', progress);\r\n    };\r\n    uploader.onSuccessItem = function(fileItem, response, status, headers) {\r\n        console.info('onSuccessItem', fileItem, response, status, headers);\r\n    };\r\n    uploader.onErrorItem = function(fileItem, response, status, headers) {\r\n        console.info('onErrorItem', fileItem, response, status, headers);\r\n    };\r\n    uploader.onCancelItem = function(fileItem, response, status, headers) {\r\n        console.info('onCancelItem', fileItem, response, status, headers);\r\n    };\r\n    uploader.onCompleteItem = function(fileItem, response, status, headers) {\r\n        console.info('onCompleteItem', fileItem, response, status, headers);\r\n    };\r\n    uploader.onCompleteAll = function() {\r\n        console.info('onCompleteAll');\r\n    };\r\n\r\n    console.info('uploader', uploader);\r\n}]);"]}