{"version":3,"sources":["angular-skycons.js"],"names":[],"mappings":"AAAA,IAAI,iBAAiB,QAAQ,MAAR,CAAgB,iBAAhB,EAAmC,EAAnC,CAArB;;AAGA,eAAe,SAAf,CAA0B,QAA1B,EAAoC,YAAY;AAC5C,WAAO;AACH,kBAAU,GADP;AAEH,iBAAS,IAFN;AAGH,eAAO;AACH,kBAAM,GADH;AAEH,kBAAM;AAFH,SAHJ;AAOH,cAAM,UAAW,KAAX,EAAkB,OAAlB,EAA2B,KAA3B,EAAmC;;;AAGrC,gBAAI,SAAS,SAAS,aAAT,CAAwB,QAAxB,CAAb;;;AAGA,gBAAK,CAAC,MAAM,KAAZ,EAAoB;AAChB,uBAAO,SAAP,GAAmB,EAAnB;AACH,aAFD,MAEO;AACH,uBAAO,SAAP,GAAmB,MAAM,KAAzB;AACH;;;AAGD,gBAAI,SAAS,EAAb;AACA,gBAAK,CAAC,MAAM,KAAZ,EAAoB;AAChB,uBAAO,KAAP,GAAe,OAAf;AACH,aAFD,MAEO;AACH,uBAAO,KAAP,GAAe,MAAM,KAArB;AACH;;AAED,gBAAI,UAAU,IAAI,OAAJ,CAAa,MAAb,CAAd;;;AAGA,kBAAM,MAAN,CAAc,MAAd,EAAsB,UAAW,MAAX,EAAmB,MAAnB,EAA4B;AAC9C,oBAAK,MAAL,EAAc;AACV,2BAAO,MAAP,GAAgB,MAAhB;AACA,2BAAO,KAAP,GAAe,MAAf;AACH,iBAHD,MAGO;AACH,2BAAO,MAAP,GAAgB,MAAM,IAAN,IAAc,EAA9B;AACA,2BAAO,KAAP,GAAe,MAAM,IAAN,IAAe,EAA9B;AACH;AACJ,aARD,EAQG,IARH;;;AAWA,kBAAM,MAAN,CAAc,MAAd,EAAsB,YAAY;AAC9B,wBAAQ,GAAR,CAAa,MAAb,EAAqB,MAAM,IAA3B;AACH,aAFD,EAEG,IAFH;;AAIA,oBAAQ,IAAR;;AAEA,gBAAK,QAAQ,CAAR,EAAW,QAAX,KAAwB,CAA7B,EAAiC;AAC7B,wBAAQ,WAAR,CAAqB,MAArB;AACH,aAFD,MAEO;AACH,wBAAQ,CAAR,EAAW,WAAX,CAAwB,MAAxB;AACH;;AAED,kBAAM,GAAN,CAAU,UAAV,EAAsB,YAAY;AAC9B,wBAAQ,MAAR,CAAe,MAAf;AACA,oBAAI,QAAQ,IAAR,CAAa,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,4BAAQ,KAAR,CAAc,MAAd;AACH;AACJ,aALD;AAMH;AA3DE,KAAP;AA6DH,CA9DD","file":"angular-skycons-compiled.js","sourcesContent":["var angularSkycons = angular.module( 'angular-skycons', [] );\n\n\nangularSkycons.directive( 'skycon', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            icon: \"=\",\n            size: \"=\"\n        },\n        link: function ( scope, element, attrs ) {\n\n            // make a canvas for our icon\n            var canvas = document.createElement( 'canvas' );\n\n            // set the CSS class from attribute\n            if ( !attrs.class ) {\n                canvas.className = \"\";\n            } else {\n                canvas.className = attrs.class;\n            }\n\n            // set default color if \"color\" attribute not present\n            var config = {};\n            if ( !attrs.color ) {\n                config.color = \"black\";\n            } else {\n                config.color = attrs.color;\n            }\n\n            var skycons = new Skycons( config );\n\n            // watch the size property from the controller\n            scope.$watch( \"size\", function ( newVal, oldVal ) {\n                if ( newVal ) {\n                    canvas.height = newVal;\n                    canvas.width = newVal;\n                } else {\n                    canvas.height = scope.size || 64;\n                    canvas.width = scope.size  || 64;\n                }\n            }, true );\n\n            // watch the icon property from the controller\n            scope.$watch( \"icon\", function () {\n                skycons.set( canvas, scope.icon );\n            }, true );\n\n            skycons.play();\n\n            if ( element[0].nodeType === 8 ) {\n                element.replaceWith( canvas );\n            } else {\n                element[0].appendChild( canvas );\n            }\n            \n            scope.$on('$destroy', function () {\n                skycons.remove(canvas);\n                if (skycons.list.length === 0) {\n                    skycons.pause(canvas);\n                }\n            });\n        }\n    };\n} );\n"]}