{"version":3,"sources":["load-google-maps.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,IAAI,iBAAkB,UAAS,CAAT,EAAY;;AAEjC,KAAI,MAAM,EAAE,GAAF,EAAV;AAAA,KAEC,OAFD;;AAIA,QAAO,UAAU,OAAV,EAAmB,MAAnB,EAA2B,QAA3B,EAAsC;;AAE5C,MAAI,OAAJ,EAAc;AAAE,UAAO,OAAP;AAAiB;;;AAGjC,MAAI,WAAW,EAAE,QAAF,EAAf;AAAA;;;AAGC,YAAU,YAAY;AACrB,YAAS,OAAT,CAAkB,OAAO,MAAP,IAAiB,OAAO,IAAxB,GAA+B,OAAO,IAAtC,GAA6C,KAA/D;AACA,GALF;AAAA;;;AAQC,iBAAe,oBAAsB,KARtC;AAAA;;;AAWC,WAAS,EAAE,MAAF,CACR,EAAC,UAAU,KAAX,EADQ,EAEN,SAAS,EAAC,OAAO,MAAR,EAAT,GAA2B,EAFrB,EAGN,WAAW,EAAC,YAAY,QAAb,EAAX,GAAoC,EAH9B,CAXV,CAeG;;;AAGH,MAAI,OAAO,MAAP,IAAiB,OAAO,IAA5B,EAAmC;;AAElC;;;AAGA,GALD,MAKO,IAAK,OAAO,MAAP,IAAiB,OAAO,IAA7B,EAAoC;;AAE1C,UAAO,IAAP,CAAY,MAAZ,EAAoB,WAAW,CAA/B,EAAkC,EAAC,gBAAgB,EAAE,KAAF,CAAQ,MAAR,CAAjB,EAAmC,YAAa,OAAhD,EAAlC;;;AAGA,GALM,MAKA;;;AAGN,YAAS,EAAE,MAAF,CAAU,MAAV,EAAkB;AAC1B,SAAK,WAAW,CADU;AAE1B,gBAAY;AAFc,IAAlB,CAAT;;;AAMA,UAAO,YAAP,IAAuB,YAAY;;AAElC;;;AAGA,eAAW,YAAW;AACrB,SAAG;AACF,aAAO,OAAO,YAAP,CAAP;AACA,MAFD,CAEE,OAAO,CAAP,EAAW,CAAE;AACf,KAJD,EAIG,EAJH;AAKA,IAVD;;;AAaA,KAAE,IAAF,CAAO;AACN,cAAU,QADJ;AAEN,UAAM,MAFA;AAGN,SAAK;AAHC,IAAP;AAMA;;AAED,YAAU,SAAS,OAAT,EAAV;;AAEA,SAAO,OAAP;AACA,EAlED;AAoEA,CA1EqB,CA0EpB,MA1EoB,CAAtB","file":"load-google-maps-compiled.js","sourcesContent":["/*!\r\n * JavaScript - loadGoogleMaps( version, apiKey, language )\r\n *\r\n * - Load Google Maps API using jQuery Deferred. \r\n *   Useful if you want to only load the Google Maps API on-demand.\r\n * - Requires jQuery 1.5\r\n * \r\n * Copyright (c) 2011 Glenn Baker\r\n * Dual licensed under the MIT and GPL licenses.\r\n */\r\n/*globals window, google, jQuery*/\r\nvar loadGoogleMaps = (function($) {\r\n\t\r\n\tvar now = $.now(),\r\n\t\r\n\t\tpromise;\r\n\t\r\n\treturn function( version, apiKey, language ) {\r\n\t\t\r\n\t\tif( promise ) { return promise; }\r\n\t\t\r\n\t\t\t//Create a Deferred Object\r\n\t\tvar\tdeferred = $.Deferred(),\r\n\t\t\r\n\t\t\t//Declare a resolve function, pass google.maps for the done functions\r\n\t\t\tresolve = function () {\r\n\t\t\t\tdeferred.resolve( window.google && google.maps ? google.maps : false );\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t//global callback name\r\n\t\t\tcallbackName = \"loadGoogleMaps_\" + ( now++ ),\r\n\t\t\t\r\n\t\t\t// Default Parameters\r\n\t\t\tparams = $.extend(\r\n\t\t\t {'sensor': false}\r\n\t\t\t , apiKey ? {\"key\": apiKey} : {}\r\n\t\t\t , language ? {\"language\": language} : {} \r\n\t\t\t);;\r\n\t\t\r\n\t\t//If google.maps exists, then Google Maps API was probably loaded with the <script> tag\r\n\t\tif( window.google && google.maps ) {\r\n\t\t\t\r\n\t\t\tresolve();\r\n\t\t\r\n\t\t//If the google.load method exists, lets load the Google Maps API in Async.\r\n\t\t} else if ( window.google && google.load ) {\r\n\t\t\r\n\t\t\tgoogle.load(\"maps\", version || 3, {\"other_params\": $.param(params) , \"callback\" : resolve});\r\n\r\n\t\t//Last, try pure jQuery Ajax technique to load the Google Maps API in Async.\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t//Ajax URL params\r\n\t\t\tparams = $.extend( params, {\r\n\t\t\t\t'v': version || 3,\r\n\t\t\t\t'callback': callbackName\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t//Declare the global callback\r\n\t\t\twindow[callbackName] = function( ) {\r\n\t\t\t\t\r\n\t\t\t\tresolve();\r\n\t\t\t\t\r\n\t\t\t\t//Delete callback\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tdelete window[callbackName];\r\n\t\t\t\t\t} catch( e ) {}\r\n\t\t\t\t}, 20);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t//Can't use the jXHR promise because 'script' doesn't support 'callback=?'\r\n\t\t\t$.ajax({\r\n\t\t\t\tdataType: 'script',\r\n\t\t\t\tdata: params,\r\n\t\t\t\turl: 'http://maps.google.com/maps/api/js'\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\r\n\t\r\n\t\tpromise = deferred.promise(); \r\n\t\t\r\n\t\treturn promise;\r\n\t};\r\n\t\r\n}(jQuery));\r\n"]}