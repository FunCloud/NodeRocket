{"version":3,"sources":["map.js"],"names":[],"mappings":";;AAEA;;AAEA,IAAI,UAAJ,CAAe,SAAf,EAA0B,CAAC,QAAD,EAAW,UAAU,MAAV,EAAkB;;AAEnD,SAAO,SAAP,GAAmB,EAAnB;;AAEA,SAAO,UAAP,GAAoB;AAClB,YAAQ,IAAI,OAAO,IAAP,CAAY,MAAhB,CAAuB,MAAvB,EAA+B,CAAC,MAAhC,CADU;AAElB,UAAM,EAFY;AAGlB,eAAW,OAAO,IAAP,CAAY,SAAZ,CAAsB;AAHf,GAApB;;AAMA,SAAO,SAAP,GAAmB,UAAU,MAAV,EAAkB,OAAlB,EAA2B;AAC5C,WAAO,SAAP,CAAiB,IAAjB,CAAsB,IAAI,OAAO,IAAP,CAAY,MAAhB,CAAuB;AAC3C,WAAK,OAAO,KAD+B;AAE3C,gBAAU,QAAQ,CAAR,EAAW;AAFsB,KAAvB,CAAtB;AAID,GALD;;AAOA,SAAO,cAAP,GAAwB,UAAU,IAAV,EAAgB;AACtC,WAAO,WAAP,GAAqB,wBAAwB,IAAxB,GAA+B,GAApD;AACA,YAAQ,GAAR,CAAY,IAAZ,EAAkB,QAAlB;AACD,GAHD;;AAKA,SAAO,cAAP,GAAwB,UAAU,MAAV,EAAkB;AACxC,WAAO,aAAP,GAAuB,MAAvB;AACA,WAAO,gBAAP,GAA0B,OAAO,WAAP,GAAqB,GAArB,EAA1B;AACA,WAAO,gBAAP,GAA0B,OAAO,WAAP,GAAqB,GAArB,EAA1B;AACA,WAAO,YAAP,CAAoB,IAApB,CAAyB,OAAO,KAAhC,EAAuC,MAAvC;AACD,GALD;;AAOA,SAAO,iBAAP,GAA2B,UAAU,MAAV,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B;AACrD,WAAO,WAAP,CAAmB,IAAI,OAAO,IAAP,CAAY,MAAhB,CAAuB,GAAvB,EAA4B,GAA5B,CAAnB;AACD,GAFD;AAGD,CAhCuB,CAA1B;;AAmCA,IAAI,SAAJ,CAAc,SAAd,EAAyB,CAAC,QAAD,EACvB,UAAU,MAAV,EAAkB;AAChB,SAAO,UAAU,MAAV,EAAkB,GAAlB,EAAuB,KAAvB,EAA8B;AACnC,QAAI,SAAS,OAAO,KAAP,CAAa,MAAM,OAAnB,CAAb;AACA,YAAQ,OAAR,CAAgB,MAAhB,EAAwB,UAAU,OAAV,EAAmB,SAAnB,EAA8B;AACpD,UAAI,KAAK,OAAO,OAAP,CAAT;AACA,UAAI,IAAJ,CAAS,SAAT,EAAoB,UAAU,GAAV,EAAe;AACjC,YAAI,SAAS,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb;;AAEA,iBAAS,OAAO,MAAP,CAAc,CAAd,CAAT;AACA,WAAG,MAAH,EAAW,EAAC,QAAQ,GAAT,EAAc,SAAS,MAAvB,EAAX;AACA,YAAI,CAAC,OAAO,OAAZ,EAAqB;AACnB,iBAAO,MAAP;AACD;AACF,OARD;AASD,KAXD;AAYD,GAdD;AAeD,CAjBsB,CAAzB","file":"map-compiled.js","sourcesContent":["/* global console:false, google:false */\r\n/*jshint unused:false */\r\n'use strict';\r\n\r\napp.controller('MapCtrl', ['$scope', function ($scope) {\r\n\r\n    $scope.myMarkers = [];\r\n\r\n    $scope.mapOptions = {\r\n      center: new google.maps.LatLng(35.784, -78.670),\r\n      zoom: 15,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    };\r\n\r\n    $scope.addMarker = function ($event, $params) {\r\n      $scope.myMarkers.push(new google.maps.Marker({\r\n        map: $scope.myMap,\r\n        position: $params[0].latLng\r\n      }));\r\n    };\r\n\r\n    $scope.setZoomMessage = function (zoom) {\r\n      $scope.zoomMessage = 'You just zoomed to ' + zoom + '!';\r\n      console.log(zoom, 'zoomed');\r\n    };\r\n\r\n    $scope.openMarkerInfo = function (marker) {\r\n      $scope.currentMarker = marker;\r\n      $scope.currentMarkerLat = marker.getPosition().lat();\r\n      $scope.currentMarkerLng = marker.getPosition().lng();\r\n      $scope.myInfoWindow.open($scope.myMap, marker);\r\n    };\r\n\r\n    $scope.setMarkerPosition = function (marker, lat, lng) {\r\n      marker.setPosition(new google.maps.LatLng(lat, lng));\r\n    };\r\n  }])\r\n;\r\n\r\napp.directive('uiEvent', ['$parse',\r\n  function ($parse) {\r\n    return function ($scope, elm, attrs) {\r\n      var events = $scope.$eval(attrs.uiEvent);\r\n      angular.forEach(events, function (uiEvent, eventName) {\r\n        var fn = $parse(uiEvent);\r\n        elm.bind(eventName, function (evt) {\r\n          var params = Array.prototype.slice.call(arguments);\r\n          //Take out first paramater (event object);\r\n          params = params.splice(1);\r\n          fn($scope, {$event: evt, $params: params});\r\n          if (!$scope.$$phase) {\r\n            $scope.$apply();\r\n          }\r\n        });\r\n      });\r\n    };\r\n  }]);"]}