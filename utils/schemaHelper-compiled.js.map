{"version":3,"sources":["schemaHelper.js"],"names":[],"mappings":";;;AAGA,IAAI,IAAI,QAAQ,QAAR,CAAR;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf,C;AACA,IAAI,SAAS,SAAS,MAAtB,C;AACA,IAAI,aAAa,UAAS,GAAT,EAAa;AAC1B,QAAI,SAAS,IAAI,MAAJ,CAAW,GAAX,CAAb;AACA,WAAO,OAAP,CAAe,UAAf,GAA0B,UAAS,MAAT,EAAgB;;AAEtC,eAAO,UAAU,IAAV,EAAe,KAAK,MAApB,EAA2B,MAA3B,CAAP;AACH,KAHD;AAIA,WAAO,OAAP,CAAe,eAAf,GAA+B,UAAS,IAAT,EAAc;AACzC,eAAO,KAAK,OAAZ;AACA,eAAO,UAAU,IAAV,EAAe,KAAK,IAApB,EAAyB,IAAzB,CAAP;AACH,KAHD;;AAKA,WAAO,OAAP,CAAe,SAAf,GAAyB,UAAS,EAAT,EAAY;AACjC,eAAO,UAAU,IAAV,EAAe,KAAK,QAApB,EAA6B,EAA7B,CAAP;AACH,KAFD;;AAIA,WAAO,OAAP,CAAe,YAAf,GAA8B,UAAS,IAAT,EAAc,IAAd,EAAmB;AAC7C,YAAG,CAAC,EAAE,GAAF,CAAM,MAAN,CAAJ,EAAkB;AACd,mBAAO,EAAC,QAAO,IAAR,EAAP;AACH;AACD,eAAO,UAAU,IAAV,EAAe,KAAK,MAApB,EAA2B,IAA3B,EAAgC,IAAhC,CAAP;AACH,KALD;;AAOA,WAAO,OAAP,CAAe,YAAf,GAA8B,UAAS,SAAT,EAAmB;AAC7C,eAAO,UAAU,IAAV,EAAe,KAAK,MAApB,EAA2B,SAA3B,CAAP;AACH,KAFD;;;;AAMA,WAAO,MAAP;AACH,CA7BD;;AA+BA,IAAI,YAAY,UAAS,GAAT,EAAa,EAAb,EAAgB,GAAG,IAAnB,EAAwB;;AAEpC,WAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAiB,GAAjB,EAAsB;;AAErC,aAAK,IAAL,CAAU,UAAS,GAAT,EAAa,IAAb,EAAkB;;AAExB,oBAAQ,IAAR;AACH,SAHD;AAIA,WAAG,KAAH,CAAS,GAAT,EAAa,IAAb;AACH,KAPM,CAAP;AAQH,CAVD;;AAYA,OAAO,OAAP,GAAiB;AACb,gBAAW,UADE;AAEb,WAAM,UAAS,SAAT,EAAmB,MAAnB,EAA0B;AAC5B,eAAO,SAAS,KAAT,CAAe,SAAf,EAAyB,MAAzB,CAAP;AACH;AAJY,CAAjB","file":"schemaHelper-compiled.js","sourcesContent":["/**\n * Created by dapaer on 16/7/24.\n */\nvar _ = require('lodash');\nvar mongoose = require(\"mongoose\");\t//\t顶会议用户组件\nvar Schema = mongoose.Schema;\t//\t创建模型\nvar initSchema = function(obj){\n    var schema = new Schema(obj);\n    schema.statics.saveEntity=function(entity){\n        //console.log(\"you call save\",entity,this.create)\n        return executeFn(this,this.create,entity);\n    }\n    schema.statics.findByCondition=function(qObj){\n        delete qObj.pageObj;\n        return executeFn(this,this.find,qObj);\n    };\n\n    schema.statics.queryById=function(id){\n        return executeFn(this,this.findById,id);\n    };\n\n    schema.statics.updateEntity = function(qObj,sObj){\n        if(!_.has('$set')){\n            sObj = {'$set':sObj};\n        }\n        return executeFn(this,this.update,qObj,sObj);\n    }\n\n    schema.statics.deleteEntity = function(condition){\n        return executeFn(this,this.remove,condition);\n    }\n  /*  shcema.statics.findOne=function(entity){\n        return executeFn(this,this.findOne,entity);\n    }*/\n    return schema;\n}\n\nvar executeFn = function(obj,fn,...args){\n   // console.log('args',args,obj);\n    return new Promise(function(resolve,rej) {\n\n        args.push(function(err,data){\n          //  console.log('args',args,err);\n            resolve(data);\n        });\n        fn.apply(obj,args);\n    });\n}\n\nmodule.exports = {\n    initSchema:initSchema,\n    model:function(tableName,schema){\n        return mongoose.model(tableName,schema);\n    }\n}"]}