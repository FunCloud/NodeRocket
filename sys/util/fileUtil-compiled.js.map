{"version":3,"sources":["fileUtil.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAGA,IAAI,WAAW,EAAf;;;;;;;;AAQA,SAAS,UAAT,GAAsB,UAAtB;;AAGA,SAAS,QAAT,GAAoB,QAApB;;;;;;;;AASA,SAAS,UAAT,CAAoB,IAApB,EACA;AACI,QAAI,YAAY,EAAhB;AACA,aAAS,IAAT,EAAc,SAAd;AACA,WAAO,SAAP;AACH;;;;;;;AAOD,SAAS,QAAT,CAAkB,IAAlB,EAAuB,SAAvB,EACA;AACI,YAAQ,GAAG,WAAH,CAAe,IAAf,CAAR,C;AACA,UAAM,OAAN,CAAc,IAAd;AACA,aAAS,IAAT,CAAc,IAAd,EACA;AACI,iBAAS,GAAG,QAAH,CAAY,OAAK,GAAL,GAAS,IAArB,CAAT;AACA,YAAG,OAAO,WAAP,EAAH,EACA;AACI,qBAAS,OAAK,GAAL,GAAS,IAAlB,EAAuB,SAAvB;AACH,SAHD,MAKA;;AAEI,gBAAI,MAAM,IAAI,MAAJ,EAAV;AACA,gBAAI,IAAJ,GAAW,OAAO,IAAlB,C;AACA,gBAAI,IAAJ,GAAW,IAAX,C;AACA,gBAAI,IAAJ,GAAW,OAAK,GAAL,GAAS,IAApB,C;AACA,sBAAU,IAAV,CAAe,GAAf;AACH;AACJ;AACJ;;;AAGD,SAAS,SAAT,CAAmB,QAAnB,EAA4B,IAA5B,EACA;AACI,OAAG,SAAH,CAAa,QAAb,EAAsB,IAAtB,EAA2B,OAA3B,EAAmC,QAAnC;AACA,aAAS,QAAT,GACA;AACI,gBAAQ,GAAR,CAAY,QAAZ;AACH;AACJ;;AAID,OAAO,OAAP,GAAiB,QAAjB","file":"fileUtil-compiled.js","sourcesContent":["var fs = require('fs');\n\n\nvar fileUtil = {};\n\n/**\n * 遍历文件夹\n * @param path 文件路径\n * @author dapaer\n * @returns {Array}\n */\nfileUtil.geFileList = geFileList;\n\n\nfileUtil.readFile = readFile;\n\n\n/**\n * 遍历文件夹\n * @param path 文件路径\n * @author dapaer\n * @returns {Array}\n */\nfunction geFileList(path)\n{\n    var filesList = [];\n    readFile(path,filesList);\n    return filesList;\n}\n\n/**\n * 读取文件夹所有文件，此处采取同步读取策略\n * @param path 文件路径\n * @param filesList 文件对象存储数组：[{size:xxx,name:xxx,path:xxx}]\n */\nfunction readFile(path,filesList)\n{\n    files = fs.readdirSync(path);//需要用到同步读取\n    files.forEach(walk);\n    function walk(file)\n    {\n        states = fs.statSync(path+'/'+file);\n        if(states.isDirectory())\n        {\n            readFile(path+'/'+file,filesList);\n        }\n        else\n        {\n            //创建一个对象保存信息\n            var obj = new Object();\n            obj.size = states.size;//文件大小，以字节为单位\n            obj.name = file;//文件名\n            obj.path = path+'/'+file; //文件绝对路径\n            filesList.push(obj);\n        }\n    }\n}\n\n//写入文件utf-8格式\nfunction writeFile(fileName,data)\n{\n    fs.writeFile(fileName,data,'utf-8',complete);\n    function complete()\n    {\n        console.log(\"文件生成成功\");\n    }\n}\n\n\n\nmodule.exports = fileUtil;"]}