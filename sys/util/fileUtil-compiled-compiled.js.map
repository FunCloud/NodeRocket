{"version":3,"sources":["fileUtil-compiled.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,IAAI,WAAW,EAAf;;;;;;;;AAQA,SAAS,UAAT,GAAsB,UAAtB;;AAEA,SAAS,QAAT,GAAoB,QAApB;;;;;;;;AAQA,SAAS,UAAT,CAAoB,IAApB,EAA0B;AACtB,QAAI,YAAY,EAAhB;AACA,aAAS,IAAT,EAAe,SAAf;AACA,WAAO,SAAP;AACH;;;;;;;AAOD,SAAS,QAAT,CAAkB,IAAlB,EAAwB,SAAxB,EAAmC;AAC/B,YAAQ,GAAG,WAAH,CAAe,IAAf,CAAR,C;AACA,UAAM,OAAN,CAAc,IAAd;AACA,aAAS,IAAT,CAAc,IAAd,EAAoB;AAChB,iBAAS,GAAG,QAAH,CAAY,OAAO,GAAP,GAAa,IAAzB,CAAT;AACA,YAAI,OAAO,WAAP,EAAJ,EAA0B;AACtB,qBAAS,OAAO,GAAP,GAAa,IAAtB,EAA4B,SAA5B;AACH,SAFD,MAEO;;AAEH,gBAAI,MAAM,IAAI,MAAJ,EAAV;AACA,gBAAI,IAAJ,GAAW,OAAO,IAAlB,C;AACA,gBAAI,IAAJ,GAAW,IAAX,C;AACA,gBAAI,IAAJ,GAAW,OAAO,GAAP,GAAa,IAAxB,C;AACA,sBAAU,IAAV,CAAe,GAAf;AACH;AACJ;AACJ;;;AAGD,SAAS,SAAT,CAAmB,QAAnB,EAA6B,IAA7B,EAAmC;AAC/B,OAAG,SAAH,CAAa,QAAb,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC,QAAtC;AACA,aAAS,QAAT,GAAoB;AAChB,gBAAQ,GAAR,CAAY,QAAZ;AACH;AACJ;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"fileUtil-compiled-compiled.js","sourcesContent":["var fs = require('fs');\n\nvar fileUtil = {};\n\n/**\n * 遍历文件夹\n * @param path 文件路径\n * @author dapaer\n * @returns {Array}\n */\nfileUtil.geFileList = geFileList;\n\nfileUtil.readFile = readFile;\n\n/**\n * 遍历文件夹\n * @param path 文件路径\n * @author dapaer\n * @returns {Array}\n */\nfunction geFileList(path) {\n    var filesList = [];\n    readFile(path, filesList);\n    return filesList;\n}\n\n/**\n * 读取文件夹所有文件，此处采取同步读取策略\n * @param path 文件路径\n * @param filesList 文件对象存储数组：[{size:xxx,name:xxx,path:xxx}]\n */\nfunction readFile(path, filesList) {\n    files = fs.readdirSync(path); //需要用到同步读取\n    files.forEach(walk);\n    function walk(file) {\n        states = fs.statSync(path + '/' + file);\n        if (states.isDirectory()) {\n            readFile(path + '/' + file, filesList);\n        } else {\n            //创建一个对象保存信息\n            var obj = new Object();\n            obj.size = states.size; //文件大小，以字节为单位\n            obj.name = file; //文件名\n            obj.path = path + '/' + file; //文件绝对路径\n            filesList.push(obj);\n        }\n    }\n}\n\n//写入文件utf-8格式\nfunction writeFile(fileName, data) {\n    fs.writeFile(fileName, data, 'utf-8', complete);\n    function complete() {\n        console.log(\"文件生成成功\");\n    }\n}\n\nmodule.exports = fileUtil;\n\n//# sourceMappingURL=fileUtil-compiled.js.map"]}