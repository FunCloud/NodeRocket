{"version":3,"sources":["dbHelper.js"],"names":[],"mappings":"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","file":"dbHelper-compiled.js","sourcesContent":["/**\n * Created by dapaer on 16-3-13.\n */\nvar mysql = require('mysql');\nvar config = require('./Config.js');\nvar dataUtil = require('./dataUtil.js');\nvar bluebird = require(\"bluebird\");\nif (dataUtil.isEmpty(global.dbPool)) {\n    global.dbPool = mysql.createPool(config.dbInfo);\n}\n\n//数据库操作帮助对象\nvar dbHelper = function () {\n\n    //sql对象\n    var sqlObj = {\n        sql: '',\n        params: [],\n        searchSql: \"\",\n        setDataParam: {},\n        insertData:{}\n    }\n\n    //操作符标识对象\n    var opObj = {\n        $lt: '<',\n        $le: '<=',\n        $gt: '>',\n        $ge: '>=',\n        $eq: '=',\n        $order: ' order by ',\n        $in: ' in ',\n        $nin: ' not in ',\n        like: ' like ',\n        llike: ' like ',\n        rlike: ' like '\n    }\n\n    /**\n     * 是否自动清空流数据\n     * @type {boolean}\n     */\n    var isAutoFlush = false;\n    var autoFilter = false;\n\n\n    /**\n     * 计算表达式\n     */\n    var calcuteExpression = function (key, value) {\n        var returnExpression = 'and ' + key + \" \";\n        console.info(\"value\",value);\n        if (!dataUtil.isEmpty(value)) {\n            if (!dataUtil.isEmpty(value.op)) {\n                if (!dataUtil.isEmpty(opObj[value.op])) {\n                    if (value.op == '$in') {\n                        returnExpression += ' in (';\n                        for (var i = 0; i < value.value.length; i++) {\n                            returnExpression += \"?,\";\n                            sqlObj.params.push(value.value);\n                        }\n                        returnExpression = returnExpression.substr(0, returnExpression.length - 1);\n                        returnExpression += ') ';\n                    }\n                    switch (value.op) {\n                        case '$in':\n                            returnExpression += ' in (';\n                            for (var i = 0; i < value.value.length; i++) {\n                                returnExpression += \"?,\";\n                                sqlObj.params.push(value.value[i]);\n                            }\n                            returnExpression = returnExpression.substr(0, returnExpression.length - 1);\n                            returnExpression += ') ';\n                            break;\n                        case '$nin':\n                            returnExpression += ' not in (';\n                            for (var i = 0; i < value.value.length; i++) {\n                                returnExpression += \"?,\";\n                                sqlObj.params.push(value.value[i]);\n                            }\n                            returnExpression = returnExpression.substr(0, returnExpression.length - 1);\n                            returnExpression += ') ';\n                            break;\n                        case 'like':\n                            returnExpression += \" like '%\" + value.value + \"%' \";\n                            break;\n                        case 'llike':\n                            returnExpression += \" like '%\" + value.value + \"' \";\n                            break;\n                        case 'rlike':\n                            returnExpression += \" like '\" + value.value + \"%' \";\n                            break;\n                        default:\n                            returnExpression += opObj[value.op] + \" ? \";\n                            sqlObj.params.push(value.value);\n                            break;\n                    }\n                }\n            }else{\n                console.info(\"value1\",returnExpression,value);\n                returnExpression += \" =  ? \";\n                sqlObj.params.push(value);\n                return returnExpression;\n            }\n        } else {\n            returnExpression += \" =  ? \";\n            sqlObj.params.push(value.value);\n            return returnExpression;\n        }\n\n        return returnExpression;\n    }\n\n\n    /**\n     * 计算sql\n     * @param queryObj 查询对象\n     * @param mode 模式\n     */\n    var calcuteSql = function (queryObj, mode) {\n        for (key in queryObj) {\n            sqlObj.searchSql += calcuteExpression(key, queryObj[key]);\n        }\n    }\n\n\n    var combindSql = function (mode, table) {\n        switch (mode) {\n            case 'query':\n                sqlObj.sql = 'select * from ' + table + ' where 1=1 ' + sqlObj.searchSql;\n                break;\n            case 'delete':\n                sqlObj.sql = 'delete from ' + table + ' where 1=1 ' + sqlObj.searchSql;\n                break;\n            case 'update':\n                var setDataSql = \" set \";\n                for (var key in sqlObj.setDataParam) {\n                    setDataSql += key + \" = \" + sqlObj.setDataParam[key] + \",\";\n                }\n                setDataSql = setDataSql.substr(0, setDataSql.length - 1);\n                sqlObj.sql = 'update ' + table + setDataSql + ' where 1=1 ' + sqlObj.searchSql;\n                break;\n            case 'insert':\n                sqlObj.sql = 'INSERT INTO ' + table + '(';\n                var valueStr =\"\";\n                for (var key in sqlObj.insertData) {\n                    sqlObj.sql+=key+',';\n                    valueStr +=  \"?,\";\n                    sqlObj.params.push(sqlObj.insertData[key]);                  \n                }\n                sqlObj.sql = sqlObj.sql.substr(0, sqlObj.sql.length - 1);\n                valueStr = valueStr.substr(0, valueStr.length - 1);\n                sqlObj.sql+=') VALUES ('+valueStr+')';\n                break;\n        }\n    }\n    var setAutoFlush = function (flag) {\n        isAutoFlush = flag;\n    }\n    var setAutoFilter = function (flag) {\n        autoFilter = flag;\n    }\n\n    return {\n        /**\n         * 清空流方法（若设置为自动，每次执行操做后会自动调用次方法）\n         */\n        flush: function () {\n            setAutoFilter(false);\n            sqlObj.sql= '';\n            sqlObj.params= [];\n            sqlObj.searchSql= '';\n            sqlObj.setDataParam= {};\n            sqlObj.insertData={};\n        },\n        /**\n         * 配置dbHelper的一些相关信息{isAutoFlush//是否自动刷新流;autoFilter://是否自动过滤}\n         * @param option\n         */\n        config: function (option) {\n            for (var key in option) {\n                if (!dataUtil.isEmpty(option[key])) {\n                    dbHelper[key] = option[key];\n                }\n            }\n        },\n        /**\n         * 查询方法\n         * @param tableName 表名\n         * @param queryObj 查询对象\n         * @param callback 回教函数\n         * @returns {*}\n         */\n        query: function (tableName, queryObj, callback) {\n            return new Promise(function (resolve, reject) {\n                calcuteSql(queryObj);\n                combindSql('query', tableName);\n                console.log(\"this is query\",sqlObj.sql)\n                global.dbPool.getConnection(function (err, conn) {\n                    if (err) console.log(\"POOL ==> \" + err);\n                    conn.query(sqlObj.sql, sqlObj.params, function (err, rows) {\n                        conn.release();\n                        if(dataUtil.isFunction(callback)){\n                            resolve(callback(err, rows));\n                        }else{\n                            resolve(rows);\n                        }\n                    });\n                });\n            });\n\n        },\n        /**\n         * 删除方法\n         * @param tableName 表名\n         * @param queryObj 查询对象\n         * @param callback 回教函数\n         * @returns {*}\n         */\n        delete: function (tableName, queryObj, callback) {\n            return new Promise(function (resolve, reject) {\n                calcuteSql(queryObj);\n                combindSql('delete', tableName);\n                console.error(sqlObj.sql)\n                global.dbPool.getConnection(function (err, conn) {\n                    if (err) console.log(\"POOL ==> \" + err);\n\n                    conn.query(sqlObj.sql, sqlObj.params, function (err, rows) {\n                        conn.release();\n                        if(dataUtil.isFunction(callback)){\n                            resolve(callback(err, rows));\n                        }else{\n                            resolve(rows);\n                        }\n                    });\n                });\n            });\n\n        },\n        /**\n         * 更新方法\n         * @param tableName 表名\n         * @param queryObj 查询对象\n         * @param callback 回教函数\n         * @returns {*}\n         */\n        update: function (tableName,queryObj,setDataParam ,callback) {\n            return new Promise(function (resolve, reject) {\n                calcuteSql(queryObj);\n                combindSql('update', tableName);\n                sqlObj.setDataParam = setDataParam || {};\n                //FIXME 这里应该是需要抛出异常的\n                console.error(sqlObj.sql)\n                global.dbPool.getConnection(function (err, conn) {\n                    if (err) console.log(\"POOL ==> \" + err);\n\n                    conn.query(sqlObj.sql, sqlObj.params, function (err, rows) {\n                        conn.release();\n                        if(dataUtil.isFunction(callback)){\n                            resolve(callback(err, rows));\n                        }else{\n                            resolve(rows);\n                        }\n                    });\n                });\n            });\n\n        },\n        /**\n         * 更新方法\n         * @param tableName 表名\n         * @param queryObj 查询对象\n         * @param callback 回教函数\n         * @returns {*}\n         */\n        insert: function (tableName,insertObj,callback) {\n            return new Promise(function (resolve, reject) {\n                insertObj.ID = dataUtil.generateID();\n                sqlObj.insertData = insertObj;\n                combindSql('insert', tableName);\n                //FIXME 这里应该是需要抛出异常的\n                global.dbPool.getConnection(function (err, conn) {\n                    if (err) console.log(\"POOL ==> \" + err);\n                    conn.query(sqlObj.sql, sqlObj.params, function (err, rows) {\n                        conn.release();\n                        if(dataUtil.isFunction(callback)){\n                            resolve(callback(err, rows));\n                        }else{\n                            resolve(rows);\n                        }\n                    });\n                });\n            });\n\n        }\n    }\n}\n\n\nmodule.exports = dbHelper;\n"]}